name: test-and-release

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  # Cancel previous runs if not on a release branch
  cancel-in-progress: ${{ !contains(fromJSON('["refs/heads/main", "ref/heads/main"]'), github.ref) }}

jobs:
  install:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

  lint-commits:
    uses: dhis2/workflows-platform/.github/workflows/lint-commits.yml@v1

  i18n:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - run: yarn i18n

  lint:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - run: yarn linter:check

  build:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - run: yarn build
      
      - name: Upload UI build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ui-build
          path: packages/ui/build
          if-no-files-found: error

      - name: Upload app build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: apps/modeling-app/build
          if-no-files-found: error

  typescript:
    runs-on: ubuntu-latest
    needs: [install, build]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Download UI build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ui-build
          path: packages/ui/build

      - run: yarn tsc:check

  release:
    needs: [install, lint, i18n, typescript, lint, build]
    # Skips forks and dependabot PRs
    if: "!github.event.push.repository.fork"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.DHIS2_BOT_GITHUB_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Download app build artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: apps/modeling-app/build

      # `cp-build` moves the modeling app build to where the semantic
      # release action looks for it
      # https://github.com/dhis2/action-semantic-release/blob/master/plugins/publish-github.js#L12
      - run: yarn cp-build
      - uses: dhis2/action-semantic-release@master
        with:
          publish-apphub: true
          publish-github: true
          publish-npm: false
          github-token: ${{ secrets.DHIS2_BOT_GITHUB_TOKEN }}
          apphub-token: ${{ secrets.DHIS2_BOT_APPHUB_TOKEN }}

      - uses: dhis2/deploy-build@master
        with:
          build-dir: apps/modeling-app/build/app
          github-token: ${{ secrets.DHIS2_BOT_GITHUB_TOKEN }}
